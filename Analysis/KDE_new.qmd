---
title: "KDE Analysis"
---
# 1. Getting Started

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse, knitr, GWmodel, dplyr, plotly, arrow, lubridate, sf, tmap, maptools, sp, raster, spatstat, spNetwork, classInt, viridis, readr)
```

# 2. Loading the Packages

## 2.1 Loading Apatial Data

This dataset is the Waste Less - Recycable Collection Point Data from data.gov.hk that contains all the different recycling points in Hong Kong.

```{r}
cp <- read_csv("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/aspatial/hkrecyclepoints.csv")
```

## 2.2 Loading Geospatial Data 

This dataset is from Hong Kong CSDI which contains all the 18 districts in Hong Kong.
```{r}
district_18 <- st_read(dsn = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/geospatial/hk_18Districts/",
                      layer = "HKDistrict18" )
```

# 3. Transforming Coordinate System

```{r}
sf_district_18 <- st_transform(district_18, crs = 2326)
```

```{r}
cp_sf <- st_as_sf(cp, 
                  coords = c("lgt","lat"), 
                  crs = 4326) %>%
  st_transform(crs=2326)
```

## 3.1 Transforming cp_sf to sf and ppp format 
```{r}
cp_sf <- cp_sf %>%
  st_union()

cp_sf <- cp_sf %>% st_transform(crs = 2326)
```

```{r}
cp_ppp <- as.ppp(cp_sf)
```

Converting sf format for cp into spatial class the sp format because you cannot do it directly.
```{r}
cp <- as_Spatial(cp_sf)
```

Spatstat requires the analytical data to be in ppp object form, but since there is no way to directly convert a Spatial\* classes into ppp object, we’ll need to convert the Spatial\* classes into a generic Spatial object first, then convert the generic sp object into ppp object form.
```{r}
cp_sp <- as(cp, "SpatialPoints")
```

```{r}
cp_ppp <- as(cp_sp, "ppp")
```

```{r}
cp_ppp_jit <- rjitter(cp_ppp, 
                          retry=TRUE, 
                          nsim=1, 
                          drop=TRUE)
```

```{r}
any(duplicated(cp_ppp_jit))
```

## 3.2 Transforming district_18 to sf and ppp format 
```{r}
district_18_transform <- district_18 %>%
  st_transform(crs = 2326)
```

Converting sf format for district_18_transform into spatial class the sp format because you cannot do it directly here as well.
```{r}
district_18_sp <- as_Spatial(district_18_transform)
```

As mentioned earlier, spatstat requires the analytical data to be in ppp object form, but since there is no way to directly convert a Spatial\* classes into ppp object, we’ll need to convert the Spatial\* classes into a generic Spatial object first, then convert the generic sp object into ppp object form.
```{r}
district_18_sp<-as(district_18_sp, "SpatialPolygons")
```

I am confining the analysis with a geographical area. In spatstat, the object called owin is specially designed to represent this polygonal region. This produces the Hong Kong's districts boundary layers. We will be doing these same steps for Wan Chai, Sha Tin and Yau Tsim Mong districts later.
```{r}
district_18_owin<-as(district_18_sp, "owin")
```

```{r}
hk_cp_ppp <- cp_ppp_jit[district_18_owin]
```

hk_ppp.km contains all the recycling points in Hong Kong 
```{r}
hk_ppp.km <- rescale(hk_cp_ppp, 1000, "km")
```

# 4. KDE on Wan Chai
```{r}
wanchai <- district_18 %>%
  filter(ENAME == "WAN CHAI")
```

```{r}
wanchai <- wanchai %>%
  st_transform(crs = 2326)
```

```{r}
wanchai <- as_Spatial(wanchai)
```

```{r}
wanchai_sp <- as(wanchai, "SpatialPolygons")
```

```{r}
wanchai_owin <- as(wanchai_sp, "owin")
```

```{r}
hk_ppp_jit <- rjitter(hk_cp_ppp, 
                      retry=TRUE, 
                      nsim=1, 
                      drop=TRUE)
```

```{r}
hk_wanchai_ppp <- hk_ppp_jit[wanchai_owin]
```

```{r}
hk_wanchai_ppp.km = rescale(hk_wanchai_ppp, 1000, "km")
```

We will be doing KDE for different kernel smoothing methods, Gaussian, Epanechnikov, Quartic and Disc for Wan Chai, Sha Tin and Yau Tsim Mong respectively. Different smoothing methods are suitable for different types of data and applications.
```{r}
wanchaigaussian <- density(hk_wanchai_ppp.km, 
             sigma=bw.ppl, 
             edge=TRUE, 
             kernel="gaussian")
```

```{r}
saveRDS(wanchaigaussian, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaigaussian.rds")
```

```{r}
wanchaigaussian <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaigaussian.rds")
```

```{r}
wanchaiepanechnikov <- density(hk_wanchai_ppp.km, 
                                    sigma=bw.ppl, 
                                    edge=TRUE, 
                                    kernel="epanechnikov")
```

```{r}
saveRDS(wanchaiepanechnikov, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaiepanechnikov.rds")
```

```{r}
wanchaiepanechnikov <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaiepanechnikov.rds")
```

```{r}
wanchaiquartic <- density(hk_wanchai_ppp.km, 
                               sigma=bw.ppl, 
                               edge=TRUE, 
                               kernel="quartic")
```

```{r}
saveRDS(wanchaiquartic, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaiquartic.rds")
```

```{r}
wanchaiquartic <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaiquartic.rds")
```

```{r}
wanchaidisc <- density(hk_wanchai_ppp.km, 
                          sigma=bw.ppl, 
                          edge=TRUE, 
                          kernel="disc")
```

```{r}
saveRDS(wanchaidisc, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaidisc.rds")
```

```{r}
wanchaidisc <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/wanchaidisc.rds")
```

# 5. KDE on Sha Tin
```{r}
shatin <- district_18 %>%
  filter(ENAME == "SHA TIN")
```

```{r}
shatin <- shatin %>%
  st_transform(crs = 2326)
```

```{r}
shatin <- as_Spatial(shatin)
```

```{r}
shatin_sp <- as(shatin, "SpatialPolygons")
```

```{r}
shatin_owin <- as(shatin_sp, "owin")
```

```{r}
hk_ppp_jit <- rjitter(hk_cp_ppp, 
                      retry=TRUE, 
                      nsim=1, 
                      drop=TRUE)
```

```{r}
hk_shatin_ppp = hk_ppp_jit[shatin_owin]
```

```{r}
hk_shatin_ppp.km = rescale(hk_shatin_ppp, 1000, "km")
```

```{r}
shatingaussian <- density(hk_shatin_ppp.km, 
                           sigma=bw.ppl, 
                           edge=TRUE, 
                           kernel="gaussian")
```

```{r}
saveRDS(shatingaussian, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatingaussian.rds")
```

```{r}
shatingaussian <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatingaussian.rds")
```

```{r}
shatinepanechnikov <- density(hk_shatin_ppp.km, 
                               sigma=bw.ppl, 
                               edge=TRUE, 
                               kernel="epanechnikov")
```

```{r}
saveRDS(shatinepanechnikov, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatinepanechnikov.rds")
```

```{r}
shatinepanechnikov <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatinepanechnikov.rds")
```

```{r}
shatinquartic <- density(hk_shatin_ppp.km, 
                          sigma=bw.ppl, 
                          edge=TRUE, 
                          kernel="quartic")
```

```{r}
saveRDS(shatinquartic, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatinquartic.rds")
```

```{r}
shatinquartic <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatinquartic.rds")
```

```{r}
shatindisc <- density(hk_shatin_ppp.km, 
                       sigma=bw.ppl, 
                       edge=TRUE, 
                       kernel="disc")
```

```{r}
saveRDS(shatindisc, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatindisc.rds")
```

```{r}
shatindisc <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/shatindisc.rds")
```

# 6. KDE on Yau Tsim Mong
```{r}
ytm <- district_18 %>%
  filter(ENAME == "YAU TSIM MONG")
```

```{r}
ytm <- ytm %>%
  st_transform(crs = 2326)
```

```{r}
ytm <- as_Spatial(ytm)
```

```{r}
ytm_sp <- as(ytm, "SpatialPolygons")
```

```{r}
ytm_owin <- as(ytm_sp, "owin")
```

```{r}
hk_ppp_jit <- rjitter(hk_cp_ppp, 
                      retry=TRUE, 
                      nsim=1, 
                      drop=TRUE)
```

```{r}
hk_ytm_ppp <- hk_ppp_jit[ytm_owin]
```

```{r}
hk_ytm_ppp.km = rescale(hk_ytm_ppp, 1000, "km")
```

```{r}
ytmgaussian <- density(hk_ytm_ppp.km, 
                          sigma=bw.ppl, 
                          edge=TRUE, 
                          kernel="gaussian")
```

```{r}
saveRDS(ytmgaussian, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmgaussian.rds")
```

```{r}
ytmgaussian <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmgaussian.rds")
```

```{r}
ytmepanechnikov <- density(hk_ytm_ppp.km, 
                              sigma=bw.ppl, 
                              edge=TRUE, 
                              kernel="epanechnikov")
```

```{r}
saveRDS(ytmepanechnikov, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmepanechnikov.rds")
```

```{r}
ytmepanechnikov <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmepanechnikov.rds")
```

```{r}
ytmquartic <- density(hk_ytm_ppp.km, 
                         sigma=bw.ppl, 
                         edge=TRUE, 
                         kernel="quartic")
```

```{r}
saveRDS(ytmquartic, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmquartic.rds")
```

```{r}
ytmquartic <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmquartic.rds")
```

```{r}
ytmdisc <- density(hk_ytm_ppp.km, 
                      sigma=bw.ppl, 
                      edge=TRUE, 
                      kernel="disc")
```

```{r}
saveRDS(ytmdisc, file = "/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmdisc.rds")
```

```{r}
ytmdisc <- read_rds("/Users/fangqilim/fangqi611/IS415-project/daylightapp/data/rds/ytmdisc.rds")
```



































































